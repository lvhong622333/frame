<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lvhong.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.lvhong.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="CHAR" property="userName" />
    <result column="pass_word" jdbcType="CHAR" property="passWord" />
    <result column="effective" jdbcType="INTEGER" property="effective" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="phone_number" jdbcType="INTEGER" property="phoneNumber" />
    <result column="e_mail" jdbcType="VARCHAR" property="eMail" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, pass_word, effective, version, phone_number, e_mail, real_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lvhong.pojo.User">
    insert into user (id, user_name, pass_word, 
      effective, version, phone_number, 
      e_mail, real_name)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=CHAR}, #{passWord,jdbcType=CHAR}, 
      #{effective,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{phoneNumber,jdbcType=INTEGER}, 
      #{eMail,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lvhong.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="effective != null">
        effective,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="eMail != null">
        e_mail,
      </if>
      <if test="realName != null">
        real_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=CHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=CHAR},
      </if>
      <if test="effective != null">
        #{effective,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="eMail != null">
        #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lvhong.pojo.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord,jdbcType=CHAR},
      </if>
      <if test="effective != null">
        effective = #{effective,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="eMail != null">
        e_mail = #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lvhong.pojo.User">
    update user
    set user_name = #{userName,jdbcType=CHAR},
      pass_word = #{passWord,jdbcType=CHAR},
      effective = #{effective,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=INTEGER},
      e_mail = #{eMail,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
     select <include refid="Base_Column_List" /> from user where user_name = #{username,jdbcType=VARCHAR}
  </select>
  
</mapper>